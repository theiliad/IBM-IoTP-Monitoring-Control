{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/devices/devices.component.html","webpack:///./src/app/components/status/status.component.html","webpack:///ws (ignored)","webpack:///./src/app/services/iotp/ibmIoTP.service.ts","webpack:///./src/app/components/devices/devices.component.ts","webpack:///./src/app/components/status/status.component.ts","webpack:///./src/app/services/livedata/liveData.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 109;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 109\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component }    from '@angular/core';\n\nimport { HeaderComponent }      from './components/header/header.component';\nimport { SidebarComponent }     from './components/sidebar/sidebar.component';\n\nimport 'svgxuse';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {};\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule }                  from '@angular/platform-browser';\nimport { NgModule, Pipe, PipeTransform }  from '@angular/core';\nimport { FormsModule }                    from '@angular/forms';\nimport { HttpModule, JsonpModule }        from '@angular/http';\n\n// Components\nimport { AppComponent }         from './app.component';\nimport { HeaderComponent }      from './components/header/header.component';\nimport { SidebarComponent }     from './components/sidebar/sidebar.component'\nimport { DevicesComponent }     from './components/devices/devices.component';\nimport { StatusComponent }      from './components/status/status.component';\n\n// Services\nimport { IBMIoTPService }       from './services/iotp/ibmIoTP.service'\nimport { LiveDataService }      from './services/livedata/liveData.service'\n\n// Routing\nimport { routing }              from './app.routes';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SidebarComponent,\n    DevicesComponent,\n    StatusComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    JsonpModule,\n    routing\n  ],\n  providers: [\n    IBMIoTPService,\n    LiveDataService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ModuleWithProviders }  from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DevicesComponent } from './components/devices/devices.component';\nimport { StatusComponent } from './components/status/status.component';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/devices', pathMatch: 'full' },\n  { path: 'devices', component: DevicesComponent },\n  { path: 'status', component: StatusComponent }\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'header-component',\n  template: `\n    <header>\n        <div class=\"container noTopPadding\">\n            <div class=\"floatLeft productTitle productTitleWide\">\n                <a [routerLink]=\"['/']\">\n                <img src=\"assets/img/iotp.png\" class=\"floatLeft\" style=\"width: 30px; margin-right: 15px; margin-top: 9px;\">\n                Plant Floor Monitor - <strong>Conveyor Status</strong>\n                </a>\n            </div>\n            \n            <div class=\"floatRight\">\n                <p class=\"floatRight medium-show large-hide\">\n                    <a href=\"#\" class=\"btn btn-demo em-Modal-Call\" rel=\"loginModal\">\n                        <i class=\"icon-menu\"></i>\n                    </a>\n                </p>\n            </div>\n        </div>\n    </header>`\n})\n\nexport class HeaderComponent {};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/header/header.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sidebar-component',\n  template: `\n    <aside class=\"sidebar\">\n        <ul class=\"sidebarItems\">\n            <li [routerLinkActive]=\"['active']\" *ngFor=\"let item of routes;\">\n                <a [routerLink]=\"[item.link]\">\n                    <i class=\"icon-location\"></i>{{item.title}}\n                </a>\n            </li>\n        </ul>\n    </aside>`\n})\n\nexport class SidebarComponent {\n    routes = [\n        {title: 'Devices', link: '/devices'},\n        {title: 'Status', link: '/status'}\n    ];\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidebar/sidebar.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 190\n// module chunks = 1","module.exports = \"<header-component></header-component>\\n\\n<div class=\\\"content\\\">    \\n    <div class=\\\"mainContent\\\">        \\n        <!-- Router Outlet -->\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 197\n// module chunks = 1","module.exports = \"<div class=\\\"container-50 noTopPadding container-30-right\\\">\\n    <div class=\\\"floatLeft\\\">\\n        <h4>Total Devices Registered</h4>\\n\\n        <span class=\\\"lightBlue\\\" style=\\\"font-size: 45px; font-weight: 700;\\\">\\n            {{totalDevices || \\\"--\\\"}}\\n        </span>\\n    </div>\\n</div>\\n\\n<div class=\\\"clearfix\\\"></div>\\n\\n<div *ngIf=\\\"this.devices !== undefined && this.devices.length > 0\\\" class=\\\"container-50 paddingTop\\\">\\n      <div class=\\\"floatRight\\\">\\n        <!--<a href=\\\"#\\\">Manage Devices</a>-->\\n      </div>\\n      \\n      <div class=\\\"dashItem\\\" ng-if=\\\"$ctrl.regions\\\">\\n        <div class=\\\"dashTitleBar\\\">\\n            <h3>Live Data Connection {{mqttStatus ? '✅' : '❌'}}</h3>\\n        </div>\\n\\n        <div class=\\\"bx--responsive-table-container\\\" style=\\\"width: 100%;\\\" data-responsive-table>\\n            <table class=\\\"bx--responsive-table bx--responsive-table--static-size\\\" style=\\\"width: 100%;\\\" data-table>\\n                <thead class=\\\"bx--table-head\\\">\\n                    <tr class=\\\"bx--table-row\\\">\\n                        <th class=\\\"bx--table-header\\\">\\n                            <span>#</span>\\n                        </th>\\n\\n                        <th class=\\\"bx--table-header bx--table-sort\\\" data-event=\\\"sort\\\" (click)=\\\"revertSort();\\\">\\n                            Device ID\\n\\n                            <svg class=\\\"bx--table-sort__svg\\\">\\n                                <use *ngIf=\\\"orderBy[0] === '-'\\\" xlink:href=\\\"/assets/img/carbon-icons.svg#icon--caret--down\\\"></use>\\n\\n                                <use *ngIf=\\\"orderBy[0] !== '-'\\\" xlink:href=\\\"/assets/img/carbon-icons.svg#icon--caret--up\\\"></use>\\n                            </svg>\\n                        </th>\\n                        \\n                        <th class=\\\"bx--table-header\\\">\\n                            RPM\\n                        </th>\\n                        \\n                        <th class=\\\"bx--table-header\\\">\\n                            State\\n                        </th>\\n                        \\n                        <th class=\\\"bx--table-header\\\">\\n                            Last Event\\n                        </th>\\n                        \\n                        <th class=\\\"bx--table-header\\\">\\n                            Auto Refresh\\n                        </th>\\n                    </tr>\\n                </thead>\\n\\n                <tbody class=\\\"bx--table-body\\\">\\n                    <tr class=\\\"bx--table-row bx--parent-row\\\" data-parent-row *ngFor=\\\"let device of devices; let i = index;\\\">\\n                        <td>{{(currentPage-1)*limit+(i + 1)}}</td>\\n                        <td>{{device.deviceId}}</td>\\n                        <td class=\\\"align-right\\\">{{device.data !== undefined ? device.data.rpm : \\\"--\\\"}}</td>\\n                        <td class=\\\"align-right\\\">{{device.data !== undefined ? (device.data.running ? \\\"Running\\\" : \\\"Stopped\\\") : \\\"--\\\"}}</td>\\n                        <td class=\\\"align-right\\\">{{device.data !== undefined ? (device.data.ts | date:'medium') : \\\"--\\\"}}</td>\\n                        <td class=\\\"align-right\\\">\\n                            <div class=\\\"bx--form-item bx--checkbox-wrapper\\\">\\n                                <input id=\\\"bx--checkbox-{{i}}\\\" class=\\\"bx--checkbox\\\" type=\\\"checkbox\\\" value=\\\"red\\\" name=\\\"checkbox\\\"\\n                                       [(ngModel)]=\\\"mqttStatus && liveData[device.deviceId]\\\" [disabled]=\\\"!mqttStatus\\\"\\n                                       (change)=\\\"setLiveData(i, $event.target.checked === true ? true : false);\\\">\\n\\n                                <label for=\\\"bx--checkbox-{{i}}\\\" class=\\\"bx--checkbox-label\\\">\\n                                    <span class=\\\"bx--checkbox-appearance\\\">\\n                                        <svg class=\\\"bx--checkbox-checkmark\\\">\\n                                            <use xlink:href=\\\"/assets/img/carbon-icons.svg#icon--checkmark\\\"></use>\\n                                        </svg>\\n                                    </span>\\n                                </label>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n        <div class=\\\"bx--pagination\\\" data-pagination *ngIf=\\\"totalDevices > 10\\\">\\n            <div class=\\\"bx--pagination__left\\\">\\n                <div class=\\\"bx--select\\\">\\n                <label for=\\\"select-id\\\" class=\\\"bx--visually-hidden\\\">Number of items per page</label>\\n                <select id=\\\"select-id\\\" class=\\\"bx--select-input\\\" [(ngModel)]=\\\"limit\\\" (change)=\\\"getDevices();\\\" data-items-per-page>\\n                    <option class=\\\"bx--select-option\\\" value=\\\"10\\\" selected>10</option>\\n                    <option class=\\\"bx--select-option\\\" value=\\\"20\\\">20</option>\\n                    <option class=\\\"bx--select-option\\\" value=\\\"30\\\">30</option>\\n                    <option class=\\\"bx--select-option\\\" value=\\\"40\\\">40</option>\\n                    <option class=\\\"bx--select-option\\\" value=\\\"50\\\">50</option>\\n                </select>\\n                <svg class=\\\"bx--select__arrow\\\">\\n                    <use xlink:href=\\\"/carbon-icons/bluemix-icons.svg#icon--caret--down\\\"></use>\\n                </svg>\\n                </div>\\n                <span class=\\\"bx--pagination__text\\\">Items per page&nbsp;&nbsp;|&nbsp;&nbsp;</span>\\n                <span class=\\\"bx--pagination__text\\\"><span data-displayed-item-range>{{(currentPage-1)*limit+1}}-{{currentPage === totalPages ? totalDevices : sum(limit, (currentPage-1)*limit)}}</span> of <span data-total-items>{{totalDevices}}</span> items</span>\\n            </div>\\n            <div class=\\\"bx--pagination__right\\\">\\n                <span class=\\\"bx--pagination__text\\\">\\n                    <span data-displayed-page-number>{{currentPage}}</span> of <span data-total-pages>{{totalPages}}</span> {{totalPages > 1 ? 'pages' : 'page'}}\\n                </span>\\n                \\n                <button class=\\\"bx--pagination__button bx--pagination__button--backward\\\" data-page-backward aria-label=\\\"Backward button\\\"\\n                        (click)=\\\"prevPage();\\\" [disabled]=\\\"currentPage === 1\\\">\\n                    <svg class=\\\"bx--pagination__button-icon\\\">\\n                        <use xlink:href=\\\"/carbon-icons/bluemix-icons.svg#icon--chevron--left\\\"></use>\\n                    </svg>\\n                </button>\\n                \\n                <label for=\\\"page-number-input\\\" class=\\\"bx--visually-hidden\\\">Page number input</label>\\n                <input id=\\\"page-number-input\\\" type=\\\"text\\\" class=\\\"bx--text-input\\\" placeholder=\\\"0\\\" [value]=\\\"currentPage\\\" disabled data-page-number-input>\\n                \\n                <button class=\\\"bx--pagination__button bx--pagination__button--forward\\\" data-page-forward aria-label=\\\"Forward button\\\"\\n                        (click)=\\\"nextPage();\\\" [disabled]=\\\"limit >= totalDevices || currentPage === totalPages\\\">\\n                    <svg class=\\\"bx--pagination__button-icon\\\">\\n                        <use xlink:href=\\\"/carbon-icons/bluemix-icons.svg#icon--chevron--right\\\"></use>\\n                    </svg>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"container-50 paddingTop\\\">\\n    <strong *ngIf=\\\"this.devices !== undefined && this.devices.length === 0\\\">\\n        No Devices Found\\n    </strong>\\n\\n    <strong *ngIf=\\\"this.devices === undefined && errorMessage === undefined\\\">\\n        Loading Devices...\\n    </strong>\\n\\n    <strong *ngIf=\\\"this.devices === undefined && errorMessage !== undefined\\\">\\n        Something went wrong!\\n    </strong>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/devices/devices.component.html\n// module id = 198\n// module chunks = 1","module.exports = \"<div class=\\\"container-50 noTopPadding container-30-right\\\">\\n    <div class=\\\"floatLeft\\\">\\n        <h4>Service Status</h4>\\n    </div>\\n</div>\\n\\n<div class=\\\"clearfix\\\"></div>\\n\\n<div *ngIf=\\\"iotpStatusKeys !== undefined && iotpStatusKeys.length > 0\\\" class=\\\"container-50 paddingTop\\\">\\n    <p>Below are the statuses of the services you are using in your <strong>IoT Platform</strong> instance</p>\\n\\n    <ul class=\\\"list\\\" style=\\\"margin-top: 10px;\\\">\\n      <li *ngFor=\\\"let key of iotpStatusKeys\\\">\\n        <strong> {{cleanCamelCase(key)}}:</strong> {{iotpStatus[key] === 'green' ? '✅' : '❌'}}\\n      </li>\\n    </ul>\\n</div>\\n\\n<div class=\\\"container-50 paddingTop\\\">\\n    <strong *ngIf=\\\"iotpStatus === undefined && errorMessage === undefined\\\">\\n        Loading...\\n    </strong>\\n\\n    <strong *ngIf=\\\"iotpStatus === undefined && errorMessage !== undefined\\\">\\n        Something went wrong!\\n    </strong>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/status/status.component.html\n// module id = 199\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 239\n// module chunks = 1","import { Injectable }              from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, URLSearchParams }          from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class IBMIoTPService {\n    // https://docs.internetofthings.ibmcloud.com/swagger/v0002.html\n    private deviceType: string  =   \"iot-conveyor-belt\";\n    \n    // Endpoint URLs\n    private baseURL: string =           `/api`;\n    private devicesURL: string =        `/device/types/${this.deviceType}/devices`;\n    private statusURL: string =        `/service-status`;\n    private lastCachedEventURL: string = `/device/types/${this.deviceType}/devices/{deviceId}/events/sensorData`\n\n    constructor(private http: Http) {}\n\n    getDevices(requestParams?): Promise<Object> {\n        const url = this.baseURL.concat(this.devicesURL);\n\n        const params: URLSearchParams = new URLSearchParams();\n        params.set('_limit',    requestParams ? requestParams.limit    : '10');\n        params.set('_sort',     requestParams ? requestParams.orderBy  : 'deviceId');\n        params.set('_bookmark', requestParams ? requestParams.bookmark : '');\n        \n        return this.http.get(url, {params: params})\n                .toPromise()\n                .then(response => response.json())\n                .catch(this.handleError);\n    }\n\n    getStatus(): Promise<Object> {\n        let url = this.baseURL.concat(this.statusURL);\n\n        return this.http.get(url)\n                .toPromise()\n                .then(response => response.json())\n                .catch(this.handleError);\n    }\n\n    getLastCachedEvent(deviceID: string): Promise<Object> {\n        let url = this.baseURL.concat(this.lastCachedEventURL.replace(\"{deviceId}\", deviceID));\n\n        return this.http.get(url)\n                .toPromise()\n                .then(response => response.json())\n                .catch(this.handleError);\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/iotp/ibmIoTP.service.ts","import { Component, OnInit }    from '@angular/core';\nimport { IBMIoTPService }       from '../../services/iotp/ibmIoTP.service';\nimport { LiveDataService }      from '../../services/livedata/liveData.service';\n\n// Carbon Design Framework\nimport { DataTable }            from 'carbon-components';\nimport { Checkbox }             from 'carbon-components';\n\n@Component({\n  templateUrl: './devices.component.html',\n  styles: [`\n    button[disabled] {\n      opacity: 0.5;\n      cursor:  not-allowed;\n    }\n\n    input[type=\"text\"][disabled] {\n      cursor: auto;\n    }\n  `]\n})\n\nexport class DevicesComponent implements OnInit {\n  // Devices List\n  errorMessage  : string;\n  devices;\n  totalDevices  : number;\n  bookmark      : string;\n  bookmarks     = {};\n  limit         : number = 10;\n  orderBy       : string = \"deviceId\";\n  currentPage   : number = 1;\n  totalPages    : number = 0;\n\n  \n  // Live Data\n  connection;\n  liveData = {};\n  messages = [];\n  message;\n  mqttStatus: boolean = false;\n  liveDataSubscribedOnInit: boolean = false;\n\n  constructor (private ibmIoTP: IBMIoTPService, private liveDataService: LiveDataService) {}\n\n  ngOnInit() {\n    this.connection = this.liveDataService.getMessages().subscribe(message => {\n      this.messages.push(message);\n\n      if (message[\"type\"] === \"new_sensorData\") {\n        console.log(\"TEXT\", message[\"text\"]);\n\n        var payload     = JSON.parse(message[\"text\"])[\"d\"];\n        const deviceId  = payload[\"id\"];\n        \n        for (let device of this.devices) {\n          if (device.deviceId === deviceId) {\n            device[\"data\"] = payload;\n          }\n        }\n      } else if (message[\"type\"] === \"mqtt_status\") {\n        this.mqttStatus = message[\"text\"].connected;\n      }\n\n      this.mqttStatusInquiry();\n    });\n    \n    this.getDevices();\n  }\n\n  getDevices(bookmark?: string, pagination?: string) {\n    var params = {\n      bookmark   : bookmark,\n      limit      : this.limit.toString(),\n      orderBy    : this.orderBy\n    };\n\n    this.ibmIoTP.getDevices(params).then(\n      devices => {\n        console.log(\"Devices:\", devices);\n\n        if (pagination) {\n          if      (pagination === \"next\") this.currentPage = this.currentPage + 1;\n          else if (pagination === \"prev\") this.currentPage = this.currentPage - 1;\n        } else {\n          this.currentPage = 1;\n        }\n\n        this.devices      = devices[\"results\"];\n\n        this.totalDevices = devices[\"meta\"].total_rows;\n        this.totalPages   = Math.ceil(this.totalDevices / this.limit);\n        \n        this.bookmark     = devices[\"bookmark\"];\n        this.bookmarks[this.currentPage] = devices[\"bookmark\"];\n\n        // Get last cached event for all devices loaded\n        var index = 0;\n        for (let device of this.devices) {\n            this.ibmIoTP.getLastCachedEvent(device.deviceId).then(\n              eventData => {\n                console.log(\"Event:\", atob(eventData[\"payload\"]));\n\n                device[\"data\"] = JSON.parse(atob(eventData[\"payload\"]))[\"d\"];\n              }, error =>  this.errorMessage = <any>error);\n            \n            // Only runs this code when the page is loading for the first time\n            if (!this.liveDataSubscribedOnInit && index < 5) {\n              this.setLiveData(index, true);\n\n              index += 1;\n            }\n        }\n\n        this.liveDataSubscribedOnInit = true;\n      }, error =>  this.errorMessage = <any>error);\n  }\n\n  revertSort() {\n    this.orderBy = (this.orderBy.charAt(0) !== '-') ? (\"-\" + this.orderBy) : (this.orderBy.substring(1));\n\n    this.getDevices();\n  }\n\n  sum(a, b) {\n    return parseInt(a)+parseInt(b);\n  }\n\n  nextPage() {\n    this.getDevices(this.bookmark, \"next\");\n  }\n\n  prevPage() {\n    this.getDevices(this.bookmarks[this.currentPage-2], \"prev\");\n  }\n\n  sendMessage() {\n    this.liveDataService.sendMessage('new-data', this.message);\n  }\n\n  mqttStatusInquiry() {\n    this.liveDataService.sendMessage('mqtt_status_inquiry', {});\n  }\n\n  setLiveData(index, turnOn) {\n    var deviceId = this.devices[index].deviceId;\n\n    if (turnOn) {\n      console.log(\"Turn ON Live Data for\", deviceId);\n    } else {\n      console.log(\"Turn OFF Live Data for\", deviceId);\n    }\n\n    this.liveData[deviceId] = turnOn;\n\n    const socketData = {\n      deviceId: this.devices[index].deviceId,\n      turnOn: this.liveData[index]\n    };\n    \n    this.liveDataService.sendMessage('mqtt_set', JSON.stringify(socketData));\n  }\n  \n  ngOnDestroy() {\n    this.connection.unsubscribe();\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/devices/devices.component.ts","import { Component, OnInit }  from '@angular/core';\nimport { IBMIoTPService }            from '../../services/iotp/ibmIoTP.service'\n\n@Component({\n  templateUrl: './status.component.html',\n  styles: [`\n    .list {\n        line-height: 30px;\n    }\n  `]\n})\n\nexport class StatusComponent implements OnInit {\n  errorMessage: string;\n  iotpStatus;\n  iotpStatusKeys;\n\n  constructor (private ibmIoTP: IBMIoTPService) {}\n\n  ngOnInit() {\n    this.ibmIoTP.getStatus().then(\n          iotpStatus => {\n            console.log(\"Status:\", iotpStatus);\n\n            var keys = Object.keys(iotpStatus);\n            if (keys.length > 0) {\n                this.iotpStatus = iotpStatus[keys[0]];\n\n                this.iotpStatusKeys = Object.keys(this.iotpStatus);\n            } else {\n                this.iotpStatus = [];\n\n                this.iotpStatusKeys = [];\n            }\n            \n          },\n          error =>  this.errorMessage = <any>error);\n  }\n\n  cleanCamelCase(text: string) {\n    return text.replace(/([A-Z])/g, ' $1')\n               .replace(/^./, function(str){ return str.toUpperCase(); })\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/status/status.component.ts","import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport * as io from 'socket.io-client';\n\nexport class LiveDataService {\n  private url: string;  \n  private socket;\n\n  constructor() {\n    const wLocation = window.location;\n\n    if (window.location.port !== \"\") {\n      this.url = `${wLocation.protocol}//${wLocation.hostname}:${wLocation.port}`;\n    } else {\n      this.url = `${wLocation.protocol}//${wLocation.hostname}`;\n    }\n  }\n  \n  sendMessage(topic, message){\n    this.socket.emit(topic, message);\n  }\n  \n  getMessages() {\n    let observable = new Observable(observer => {\n      this.socket = io(this.url);\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n    \n    return observable;\n  }  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/livedata/liveData.service.ts"],"sourceRoot":""}